{{- if .Values.ingress.enabled -}}
{{- $fullName := include "nodejs.fullname" . -}}
apiVersion: {{ include "nodejs.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
{{ include "nodejs.labels" . | indent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if and .Values.ingress.ingressClassName (eq "false" (include "nodejs.ingress.supportsIngressClassname" .)) }}
    kubernetes.io/ingress.class: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
spec:
  {{- if and .Values.ingress.ingressClassName (eq "true" (include "nodejs.ingress.supportsIngressClassname" .)) }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      {{- if .secretName }}
      secretName: {{ .secretName }}
      {{- end }}
  {{- end }}
{{- end }}
  rules:
  {{- $pathType := .Values.ingress.pathType -}}
  {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ . }}
            pathType: {{ $pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: http
        {{- end }}
  {{- end }}
{{- end }}
