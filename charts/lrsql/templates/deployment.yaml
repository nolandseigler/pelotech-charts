apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lrsql.fullname" . }}
  labels:
    {{- include "lrsql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lrsql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lrsql.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "lrsql.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # TODO: This should go somewhere else
          {{- if not (or (.Values.sqlite.enabled) (.Values.postgres.enabled)) }}
          {{- fail ".Values.sqlite.enabled or .Values.postgres.enabled must be enabled" }}
          {{- end }}
          # TODO: This should go somewhere else
          {{- if and (.Values.sqlite.enabled) (.Values.postgres.enabled) }}
          {{- fail ".Values.sqlite.enabled and .Values.postgres.enabled cannot both be true" }}
          {{- end }}
          {{- if and (.Values.sqlite.enabled) (.Values.sqlite.command) }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.sqlite.command "context" $) | nindent 12 }}
          {{- else if and (.Values.postgres.enabled) (.Values.postgres.command) }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.postgres.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.containerPorts.http }}
            - name: LRSQL_HTTP_PORT
              value: {{ .Values.containerPorts.http | quote }}
            {{- end }}
            {{- if .Values.containerPorts.https }}
            - name: LRSQL_SSL_PORT
              value: {{ .Values.containerPorts.https | quote }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if and (.Values.sqlite.enabled) (.Values.sqlite.extraEnvVars) }}
            {{- include "common.tplvalues.render" (dict "value" .Values.sqlite.extraEnvVars "context" $) | nindent 12 }}
            {{- else if and (.Values.postgres.enabled) (.Values.postgres.extraEnvVars) }}
            {{- include "common.tplvalues.render" (dict "value" .Values.postgres.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            {{- if .Values.containerPorts.http }}
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
            {{- end }}
            {{- if .Values.containerPorts.https }}
            - name: https
              containerPort: {{ .Values.containerPorts.https }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.persistence.mountPath }}
              name: db
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: db
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "lrsql.fullname" .) }}
          {{- else }}
          emptyDir: { }
          {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
